<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>VueJS</title>
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <link rel="stylesheet" href="./css/uikit.min.css" />
    <link rel="stylesheet" href="./css/select2.css" />

    <link rel="stylesheet" href="./css/quill.core.css">
    <link rel="stylesheet" href="./css/quill.snow.css">
    <link rel="stylesheet" href="./css/quill.bubble.css">
    <link rel="stylesheet" href="./css/daterangepicker.css">
    <link rel="stylesheet" href="./css/styles.css" />
    <link rel="stylesheet" href="./css/style_builder.css" />

    <style>
    </style>

    <script src="./js/vue.min.js"></script>
    <script src="./js/jquery.min.js"></script>

    <script src="./js/vuelidate.min.js"></script>
    <script src="./js/validators.min.js"></script>
    <script src="./js/uikit.min.js"></script>
    <script src="./js/uikit-icons.min.js"></script>
    <script src="./js/select2.js"></script>
    <script src="./js/quill.min.js"></script>
    <script src="./js/moment.min.js"></script>
    <script src="./js/daterangepicker.js"></script>
    <script src="./js/sortable.min.js"></script>
    <script src="./js/script_common.js"></script>
    <script src="./js/editfieldmodal.js"></script>
    <script src="./js/component_builder_helpers.js"></script>
    <script src="./js/components.js"></script>
    <script src="./js/script_builder.js"></script>
</head>
<body>

    [<a href="/"><< Back</a>]

    <div id="app">

    </div>

    <script>
        var dataSources = [
             {
                 //common/mandatory part
                id:'countries',
                title:'Countries',
                cached:false,
                //custom part
                config:{
                    type: 'rest',
                    method: 'GET',
                    queryable: true,
                    queryableUrl:'https://restcountries.eu/rest/v2/name/{{query}}?fields=name;flag;alpha3Code',
                    getAllUrl:'https://restcountries.eu/rest/v2/all?fields=name;flag;alpha3Code',
                    transform:function(data){
                        var results=[];
                        for (var i = 0; i < data.length; i++) {
                            results.push({
                                id: data[i].alpha3Code,
                                text: data[i].name
                            });
                        }
                        return results;
                    }
                }
            },
            {
                 //common/mandatory part
                id:'currencies',
                title:'Currencies',
                cached:true,
                //custom part
                config:{
                    type: 'rest',
                    method: 'GET',
                    queryable: false,
                    getAllUrl:'https://openexchangerates.org/api/currencies.json',
                    transform:function(data){
                        var results=[];
                        for (let [key, value] of Object.entries(data)) {
                            results.push({
                                id: key,
                                text: value
                            });
                        }
                        return results;
                    }
                }
            }
        ];

        $(document).ready(function () {
            coreform.formBuilder("#app", {
                dataSourceList: function(callback) {
                    var data = [];
                    for (var i = 0; i < dataSources.length; i++) {
                        data.push({
                            id : dataSources[i].id, 
                            text : dataSources[i].title
                        });
                    }
                    callback(data);
                },
                dataSource: function (id, onSuccess, query) {
                    var dataSource;
                    for (var i = 0; i < dataSources.length; i++) {
                        if(dataSources[i].id===id) {dataSource=dataSources[i];break;}
                    }
                    if(dataSource){
                        var url = null;
                        if(dataSource.config.getAllUrl) url = dataSource.config.getAllUrl;
                        if (dataSource.config.queryable && query) url = dataSource.config.queryableUrl.replace(/{{query}}/gi, query);
                        $.ajax({
                            url: url,
                            crossDomain:true,
                            type: dataSource.config.method,
                            //contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            success: function (data) {
                                if(dataSource.config.transform)data = dataSource.config.transform(data);
                                onSuccess(data);
                            }
                        });
                    }
                }

            });
        });
    </script>



</body>
</html>
